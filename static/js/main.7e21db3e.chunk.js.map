{"version":3,"sources":["App.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","menuButton","marginRight","title","flexGrow","ChatView","props","endpoint","chatroom","useState","JSON","parse","msgs","setMsgs","useEffect","fetch","method","headers","Headers","then","res","json","catch","error","alert","response","List","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","uid","secondary","Fragment","Typography","component","variant","color","dangerouslySetInnerHTML","__html","content","time","Divider","ScrollTop","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","App","useTheme","ThemeProvider","CssBaseline","AppBar","Toolbar","IconButton","edge","id","Container","Grid","container","item","xs","Box","my","Fab","size","createTheme","palette","blue","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7e21db3e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  Container,\n  Fab,\n  useScrollTrigger,\n  CssBaseline,\n  Zoom,\n  IconButton,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Divider,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nfunction ChatView(props) {\n  const { endpoint, chatroom } = props;\n  const [msgs, setMsgs] = useState(\n    JSON.parse(\n      '[{\"msgid\": \"0\",\"uid\": null,\"time\": \"2021-07-30 14:00:13\",\"app\": \"LandChat Web (Chrome-Windows)\",\"content\": \"<p>Hello, world</p>\",\"type\": \"0\",\"filename\": \"\"}]'\n    )\n  );\n\n  useEffect(() => {\n    fetch(endpoint, {\n      method: \"GET\",\n      //body: \"room=\" + encodeURI(chatroom),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      })\n    })\n      .then((res) => res.json())\n      .catch((error) => alert(\"Error:\" + error))\n      .then((response) => setMsgs(response));\n  }, [props.chatroom]);\n\n  return (\n    <List>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar\n            alt=\"\"\n            src=\"https://i.loli.net/2020/09/12/Co5Kxh26J9rbW4j.jpg\"\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={msgs[0].uid}\n          secondary={\n            <React.Fragment>\n              <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n                <div dangerouslySetInnerHTML={{ __html: msgs[0].content }} />\n              </Typography>\n              <br />\n              {msgs[0].time}\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <AccountCircleIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Work\" secondary=\"Jan 7, 2014\" />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </List>\n  );\n}\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\n\nexport default function App(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h5\">Landchat 2021</Typography>\n          </Toolbar>\n        </AppBar>\n        <Toolbar id=\"back-to-top-anchor\" />\n        <Container>\n          <Grid container spacing={3}>\n            <Grid item xs>\n              <Box my={2}>Sidebar</Box>\n            </Grid>\n            <Grid item xs={9}>\n              <ChatView {...props} chatroom=\"\" />\n            </Grid>\n          </Grid>\n        </Container>\n        <ScrollTop {...props}>\n          <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n            <KeyboardArrowUpIcon />\n          </Fab>\n        </ScrollTop>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nconst theme = createTheme({\n  palette: {\n    primary: blue\n  }\n});\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App theme={theme} endpoint=\"/api.json\" />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}